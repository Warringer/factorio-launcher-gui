#!/usr/bin/env python3

#==================
# imports
#==================
import tkinter as tk
from tkinter import *
from tkinter import ttk
from tkinter import messagebox as msg

import sys
import os
import json

# Loading Factorio mods externally
with open("factorio-mods.json", "r") as json_file:
    json_data = json.load(json_file)
	
mods = json_data["Mods"]
directories = json_data["Directories"]
#print(mods)
#print(mod_dir)

# Create Instance
main = tk.Tk()

# Add Title
main.title("Factorio Games")

# Disable Resizing
main.resizable(False, False)

# Launcher Class
class Launcher:
	def __init__(self, rootTab, mods):
		self.frame = ttk.Frame(rootTab)
		self.mods = mods
		self.root = rootTab
		self._addButtons()
	
	def _addButtons(self):
		# Add Buttons
		# Add Launcher Button
		buttons = []
		x = 0
		for mod in self.mods:
			print(mod + " " + self.mods[mod])
			button = ttk.Button(self.root, text=mod+" Factorio", command=self._make_callback(mod))
			button.grid(column=0, row=x, padx=10, pady=2, sticky=N+S+E+W)
			x = x + 1
		
		# Cancel Button
		can = ttk.Button(self.root, text="Cancel", command=self._cancel)
		can.grid(column=0, row=x, padx=10, pady=2, sticky=N+S+E+W)
		
	def _mbox(self, mod):
		text = "Launching "+mod
		msg.shomainfo("Launching", text)
		
	def _launch(self, mod=""):
		if game_dir:
			launcher = game_dir
		else:
			launcher = "steam -applaunch 427520"
		if mod:
			launcher = launcher + " --mod-directory ~/.factorio/" + mod
		print(launcher)
		os.system(launcher)
	
	def _callback(self, mod):
		self._mbox(mod + " Factorio")
		self._launch(mods[mod])
		self._cancel()

	def _make_callback(self, mod):
		return (lambda: _callback(mod))

	# Factorio Starting Options
	def _cancel(self):
		main.quit()
		main.destroy()
		#exit()
		
class Files:
	def __init__(self, rootTab, directories):
		self.frame = ttk.Frame(rootTab)
		self.directories = directories

# Tabs for ease of use

tabControl = ttk.Notebook(main)

tab1 = Launcher(tabControl, mods)
tabControl.add(tab1.frame, text="Launch Factorio")
tab2 = Files(tabControl, directories)
tabControl.add(tab2.frame, text="Directories")
tabControl.pack(expand=1, fill="both")

#==================
# Starting GUI
#==================
main.mainloop()
