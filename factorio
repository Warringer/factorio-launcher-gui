#!/usr/bin/env python3

#==================
# imports
#==================
import tkinter as tk
from tkinter import *
from tkinter import ttk
from tkinter import messagebox as msg
from tkinter import filedialog as fDiag

import sys
import os
import json

# Loading Factorio mods externally
with open("factorio-mods.json", "r") as json_file:
    json_data = json.load(json_file)
	
mods = json_data["Mods"]
directories = json_data["Directories"]
#print(mods)
#print(mod_dir)

# Create Instance
main = tk.Tk()

# Add Title
main.title("Factorio Games")

# Disable Resizing
main.resizable(False, False)

# Launcher Class
class Launcher:
	def __init__(self, rootTab, mods, directories):
		self.frame = ttk.Frame(rootTab)
		self.mods = mods
		self.root = rootTab
		self.gamedir = directories["Game"]
		self._addButtons()
	
	def _addButtons(self):
		# Add Buttons
		# Add Launcher Button
		self.labelFrame = ttk.LabelFrame(self.frame, text="Launcher")
		self.labelFrame.grid(column=0, row=0, sticky=N+S+E+W, padx=5, pady=5)
		buttons = []
		x = 0
		for mod in self.mods:
			print(mod + " " + self.mods[mod])
			button = ttk.Button(self.labelFrame , text=mod+" Factorio", command=self._make_callback(mod))
			button.grid(column=0, row=x, padx=10, pady=2, sticky=N+S+E+W)
			x = x + 1
		
		# Cancel Button
		self.can = ttk.Button(self.labelFrame , text="Cancel", command=self._cancel)
		self.can.grid(column=0, row=x, padx=10, pady=2, sticky=N+S+E+W)
		
	def _mbox(self, mod):
		text = "Launching "+mod
		msg.showinfo("Launching", text)
		
	def _launch(self, mod=""):
		if self.gamedir:
			launcher = self.gamedir
		else:
			if os.name == "nt":
				launcher = '""%s" %s"' % ("%ProgramFiles(x86)%\\Steam\\steam", "-applaunch 427520")
			else:
				launcher = "steam -applaunch 427520"
		if mod:
			launcher = launcher + " --mod-directory ~/.factorio/" + mod
		print(launcher)
		os.system(launcher)
	
	def _callback(self, mod):
		self._mbox(mod + " Factorio")
		self._launch(mods[mod])
		self._cancel()

	def _make_callback(self, mod):
		return (lambda: self._callback(mod))

	# Factorio Starting Options
	def _cancel(self):
		main.quit()
		main.destroy()
		#exit()
		
class Files:
	def __init__(self, rootTab, directories):
		self.frame = ttk.Frame(rootTab)
		self.directories = directories
		self.entrylen = 20
		self._addFileControls()
		
	def _gameDiag(self):
		name = fDiag.askopenfilename(parent=main)
		
	def _modDiag(self):
		name = fDiag.askopenfilename(parent=main)
		
	def _addFileControls(self):
		self.labelFrame = ttk.LabelFrame(self.frame, text="Directories")
		self.labelFrame.grid(column=0, row=0, sticky=N+S+E+W, padx=5, pady=5)
		self.gameButton = ttk.Button(self.labelFrame, text="Game Directory", command=self._gameDiag)
		self.gameButton.grid(column=0, row=0, sticky=N+S+E+W, padx=5, pady=5)
		self.gameTextField = ttk.Entry(self.labelFrame, width=self.entrylen, textvariable=self.directories["Game"])
		self.gameTextField.grid(column=1, row=0, padx=5, pady=5)
		self.modButton = ttk.Button(self.labelFrame, text="Mod Directory", command=self._modDiag)
		self.modButton.grid(column=0, row=1, sticky=N+S+E+W, padx=5, pady=5)
		self.modTextField = ttk.Entry(self.labelFrame, width=self.entrylen, textvariable=self.directories["Mods"])
		self.modTextField.grid(column=1, row=1, padx=5, pady=5)
		
		self.saveButton = ttk.Button(self.labelFrame, text="Save Changes")
		self.saveButton.grid(column=0, row=2, columnspan=2, padx=5, pady=5)
		

# Tabs for ease of use

tabControl = ttk.Notebook(main)

tab1 = Launcher(tabControl, mods, directories)
tabControl.add(tab1.frame, text="Launch Factorio")
tab2 = Files(tabControl, directories)
tabControl.add(tab2.frame, text="Directories")
tabControl.pack(expand=1, fill="both")

#==================
# Starting GUI
#==================
main.mainloop()
